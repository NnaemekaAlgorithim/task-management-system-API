openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: API for user management, including registration, login, profile, update, and delete operations.
servers:
  - url: http://localhost:5000

paths:
  /register:
    post:
      summary: Register a new user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - first_name
                - last_name
                - email
                - password
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  access_token:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /login:
    post:
      summary: Login a user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  access_token:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /profile:
    get:
      summary: Get user profile
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                  last_name:
                    type: string
                  email:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /update:
    patch:
      summary: Update user profile
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /delete:
    delete:
      summary: Delete a user
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: Unauthorized action
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /admin_login:
    post:
      summary: Admin user login
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  access_token:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /create_task_group:
    post:
      summary: Create a new task group
      tags:
        - TaskGroup
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_group_title:
                  type: string
              required:
                - task_group_title
      responses:
        '201':
          description: Task Group created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Missing JSON data or required field
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /update_task_group:
    patch:
      summary: Update an existing task group
      tags:
        - TaskGroup
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_group_id:
                  type: integer
                task_group_title:
                  type: string
              required:
                - task_group_id
                - task_group_title
      responses:
        '200':
          description: Task Group updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Missing JSON data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Task group not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /get_all_task_groups:
    get:
      summary: Get all task groups
      tags:
        - TaskGroup
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of all task groups
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    task_group_id:
                      type: integer
                    task_group_title:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /delete_task_group:
    delete:
      summary: Delete a task group
      tags:
        - TaskGroup
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_group_id:
                  type: integer
              required:
                - task_group_id
      responses:
        '200':
          description: Task Group deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Missing JSON data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Task group not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /create_task:
    post:
      summary: Create a new task
      tags:
        - Task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_title:
                  type: string
                  example: New Task
                task_description:
                  type: string
                  example: Description of the task
                task_group:
                  type: string
                  example: Group1
              required:
                - task_title
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task created successfully
        '400':
          description: Missing JSON data or required field
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /get_tasks:
    get:
      summary: Get tasks by task group
      tags:
        - Task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_group:
                  type: string
                  example: Group1
              required:
                - task_group
      responses:
        '200':
          description: A list of tasks in the specified group
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    task_id:
                      type: integer
                      example: 1
                    task_title:
                      type: string
                      example: Task Title
                    task_description:
                      type: string
                      example: Task Description
                    task_group:
                      type: string
                      example: Group1
                    created_by:
                      type: string
                      example: user@example.com
                    updated_by:
                      type: string
                      example: user@example.com
                    moved_by:
                      type: string
                      example: user@example.com
                    created_at:
                      type: string
                      format: date-time
                      example: 2023-05-19T14:28:23.382Z
                    updated_at:
                      type: string
                      format: date-time
                      example: 2023-05-19T14:28:23.382Z
        '400':
          description: Missing JSON data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Missing JSON data
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task not found

  /update_tasks:
    patch:
      summary: Update an existing task
      tags:
        - Task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                  example: 1
                task_title:
                  type: string
                  example: Updated Task Title
                task_description:
                  type: string
                  example: Updated Description
                task_group:
                  type: string
                  example: Updated Group
              required:
                - task_id
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task updated successfully
        '400':
          description: Missing JSON data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Missing JSON data
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task not found

  /delete_tasks:
    delete:
      summary: Delete a task
      tags:
        - Task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                  example: 1
              required:
                - task_id
      responses:
        '200':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task deleted successfully
        '400':
          description: Missing JSON data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Missing JSON data
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
